{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Homework #3\"\noutput: pdf_document\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(message = FALSE,\n                      warning = FALSE)\n```\n\nFor questions 1-4 in this problem set, we will work with a dataset on dogs of New York City, found here: https://project.wnyc.org/dogs-of-nyc/\n\n**Please use the \"NYCdogs.csv\" version found in Files/Data folder on CourseWorks, which includes a Group column.  If you already did some of the questions that didn't require the Group column, you do not have to redo them.**\n\nBackground: The dataset is dated June 26, 2012. Although the data were originally produced by the NYC Department of Mental Health and Hygiene, it no longer seems to be available on any official NYC web site. (There is a 2016 dataset on dog licenses with different variables available here: https://data.cityofnewyork.us/Health/NYC-Dog-Licensing-Dataset/nu7n-tubp). Also of note is the fact that this dataset has 81,542 observations. The same summer, the New York City Economic Development Corporation estimated that there were 600,000 dogs in New York City (source: https://blog.nycpooch.com/2012/08/28/how-many-dogs-live-in-new-york-city/) Quite a difference! How many dogs were there really in 2012?!? Might be an interesting question to pursue for a final project, but for now we'll work with what we've got.\n\n### 1. Missing Data\n\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n#While reading the file, we change missing values from n/a to NA so that R understands they are missing values\ndf <- read.csv(\"/Users/arnaudstiegler/Desktop/Columbia/data_viz/hw3/NYCdogs.csv\",na = \"n/a\")\nhead(df)\n```\n\n\n(a) Create a bar chart showing percent missing by variable.\n\n```{r, fig.height = 4, fig.width = 10}\n#We compute the number of missing values for each column\nmissing_df <- colSums(is.na(df))\n#We compute the percent missing by variable\nmissing_df <- sapply(missing_df, function(x) (x/nrow(df))*100 )\n#Converting vector to dataframe, and removing unwanted column\nmissing_df <- data.frame(missing_df)[1]\ncolnames(missing_df) <- c('percent')\n\na <- ggplot(missing_df, aes(x=reorder(rownames(missing_df),-percent),percent))+ \n  geom_bar(stat='identity')+\n  xlab(\"Category\")+\n  ylab(\"Percent of missing values (in %)\")+\n  ggtitle(\"Distribution of missing values by category\")+\n  theme(plot.title = element_text(hjust = 0.5))\na\n```\n\n\n\n(b) Use the `extracat::visna()` to graph missing patterns. Interpret the graph.\n\n```{r fig.height = 4, fig.width = 6}\nlibrary(extracat)\n\nextracat::visna(df)\n\n```\n\nWe can see that:\n\n- the main missing information are secondary_color and third_color which seems quite logical: if the dog has only one or two colors, it will be missing one or both values.\n\n- the third most missing value is the dog name: maybe when the dog owner registers the dog, he has not always chosen a name yet for his dog.\n\n- As a consequence, the most common pattern is the one with no missing values.\n\n- The second most common pattern is having only the third color missing: most of those cases are probably for dogs with only two colors\n\n- The third most common pattern is having the second and the third color missing: most of those cases are probably for dogs with a single color.\n\n\n(c) Do `dog_name` missing patterns appear to be associated with the *value* of `gender`, `Group` *or* `borough`?  \n\n\n```{r fig.height = 6, fig.width = 6}\nlibrary(grid)\nlibrary(vcd)\n\nmosaic_missing <- df\nmosaic_missing$dog_name <- sapply(mosaic_missing$dog_name, function(x) if(is.na(x)){TRUE} else{FALSE} )\n\nvcd::mosaic(dog_name ~ borough,mosaic_missing,split_vertical=TRUE,gp=gpar(fill=c(\"grey\",\"red\")))\n```\n```{r}\nlibrary(grid)\nlibrary(vcd)\n\nmosaic_missing <- df\nmosaic_missing$dog_name <- sapply(mosaic_missing$dog_name, function(x) if(is.na(x)){TRUE} else{FALSE} )\n\nvcd::mosaic(dog_name ~ gender,mosaic_missing,split_vertical=TRUE,gp=gpar(fill=c(\"grey\",\"red\")))\n```\n\n\nIt does not seem that there is significant association between a missing dog name and the value of gender or borough. There is no visible difference in terms of proportion of missing values in either graphs which means that missing name are homogeneously distributed per gender and borough.\n\n```{r fig.height = 6, fig.width = 8}\n\nmosaic_missing <- df\n#Changing Group levels order for avoiding overlapping names\nmosaic_missing$Group <- factor(mosaic_missing$Group,levels(mosaic_missing$Group)[c(1,3,2,4:8)])\nmosaic_missing$dog_name <- sapply(mosaic_missing$dog_name, function(x) if(is.na(x)){TRUE} else{FALSE} )\n\nvcd::mosaic(dog_name ~ Group,mosaic_missing,split_vertical=TRUE,\n            gp=gpar(fill=c(\"grey\",\"red\")),labeling_args=list(gp_labels=gpar(fontsize=6),\n            gp_varnames=gpar(fontsize=8)),legend_args=list(fontsize=6))\n```\n\nAccording to the mosaic plot, it seems that the proportion of missing names is higher for certain groups (Mutt, Non-Sporting and Toy). Given that the proportion of missing names is about the double of the proportion of the other groups, we can say that there is an association between groups and missing names. However, this association is not significant, given that the proportion of missing names remain quite low.\n\n\n### 2. Dates\n\n(a) Convert the `birth` column of the NYC dogs dataset to `Date` class (use \"01\" for the day since it's not provided). Create a frequency histogram of birthdates with a one-month binwidth.  (Hint: don't forget about base R.) What do you observe? Provide a reasonable hypothesis for the prominent pattern in the graph.\n\n```{r}\ndf <- read.csv(\"/Users/arnaudstiegler/Desktop/Columbia/data_viz/hw3/NYCdogs.csv\",na = \"n/a\")\n\n#Function to parse correctly the dates into 2 correct formats\nf <- function(date){\n  if (!is.na(as.numeric(substring(date, 1, 1))) & is.na(as.numeric(substring(date, 1, 2)))){\n    return(paste0(\"0\",as.character(date),\"-01\"))}\n  else{\n    return(paste0(as.character(date),\"-1\"))\n  }\n}\n\ndf$birth <- sapply(df$birth, function(x) f(x))\n\n#For the first format\nx <- as.Date(df$birth,format=\"%y-%b-%d\") \n#For the second format\ny <- as.Date(df$birth,format=\"%b-%y-%d\")\n#merge the 2 formats\nx[is.na(x)] <- y[!is.na(y)]\n\ndf$birth <- x\n```\n\n```{r}\nhist(df$birth, \"months\", format = \"%y-%b-%d\")\n```\n\n\nWe can see different interesting things:\n\n- A globally increasing number of dogs between ~1970 and 2000, then the number goes back down and the increasing trend goes on\n\n- Some peaks on a specific month each year, and some month on which no dog is recorded to be born: this is why choosing 'month' as binwidth is not a very good choice\n\n- There are also some wrong values: some birth are assigned to 2066 so we need to remove them.\n\nA simple explanation for the peaks and the absence of dog births might be that the counting of the births was done by batch: for some months, there was no count of dog birth so it is likely that the birth was marked on the month it was counted even though it was not the actual birth month but the batch counting month.\n\n\n```{r}\n#Removing incorrect rows\ndf<-df[(df$birth<\"2012-03-02\"),]\n\n```\n\n\n\n(b) Redraw the frequency histogram with impossible values removed and a more reasonable binwidth.\n\nBy removing all the values which year is after 2012, we obtain the new graph.\n\n```{r}\n\nhist(df$birth, \"years\", format = \"%y-%b-%d\")\n\n```\n\n### 3. Mosaic plots\n\n(a) Create a mosaic plot to see if `dominant_color` depends on `Group`. Use only the top 5 dominant colors; group the rest into an \"OTHER\" category. The last split should be the dependent variable and it should be horizontal. Sort each variable by frequency, with the exception of \"OTHER\", which should be the last category for dominant color. The labeling should be clear enough to identify what's what; it doesn't have to be perfect. Do the variables appear to be associated? Briefly describe.\n\n```{r fig.height = 7, fig.width = 7}\nlibrary(vcd)\nlibrary(grid) # needed for gpar\n\ndf <- read.csv(\"/Users/arnaudstiegler/Desktop/Columbia/data_viz/hw3/NYCdogs.csv\",na = \"n/a\")\n\n#To identify the top 5 colors\ntop_5 <- tail(names(sort(table(df$dominant_color))), 5)\nchange_color <- function(x,top_5){\n  if(x %in% top_5){\n    return(as.character(x))\n  }\n  else{\n    return(\"OTHER\")\n  }\n}\n\ndf$dominant_color <- sapply(df$dominant_color,function(x) change_color(x,top_5))\n\ndf$dominant_color <- as.factor(df$dominant_color)\n\n#Changing levels order bease on frequency\ndf$dominant_color <- factor(df$dominant_color,levels(df$dominant_color)[c(1,6,3,5,2,4)])\n\n#Changing Group levels order for avoiding overlapping names\ndf$Group <- factor(df$Group,levels(df$Group)[c(1,3,2,4:8)])\n\nvcd::mosaic(dominant_color ~ Group,df,split_vertical=TRUE,gp=gpar(fill=c('black','white','chocolate4','tan','gold','grey')),labeling_args=list(gp_labels=gpar(fontsize=6),\n            gp_varnames=gpar(fontsize=8)),legend_args=list(fontsize=6))\n```\n\nFor the mosaic plot above, we did not put any color since it was interfering with the fact that one of the variable is already a color.\n\nDominant_color and Groups are highly related.\n- Herding: about half of the dogs are black\n\n- Mutt: black is the most represented color. The distribution for the remaining colors is more or less homogenuous\n\n- Hound: black, brown and other are the main colors\n\n- Non-Sporting: white is the main color, black and OTHER come after\n\n- Sporting: the main color is blond, black and OTHER come after\n\n- Terrier: the main color is white, OTHER is the second one\n\n- Toy: white is the main color, black and OTHER come after\n\n- Working: black is the main color, then OTHER\n\nOverall, we can say that there is a main color for each group (meaning a color that accounts for the biggest part of the group). So the variables are associated.\n\n(b) Redraw with the \"OTHER\" category filtered out. Do the results change? How should one decide whether it's necessary or not to include an \"OTHER\" category?\n\n```{r fig.height = 7, fig.width = 7}\n\n#Removing rows with \"other\" dominant color\ndf <- df[!(df$dominant_color==\"OTHER\"),]\n\n#Remove \"other\" from the levels\ndf$dominant_color <- factor(df$dominant_color)\nvcd::mosaic(dominant_color ~ Group, df,split_vertical=TRUE,gp=gpar(fill=c('black','white','chocolate4','tan','gold')),,labeling_args=list(gp_labels=gpar(fontsize=6),\n            gp_varnames=gpar(fontsize=8)),legend_args=list(fontsize=6))\n```\n\nOf course, the graph does change: since OTHER accounts for quite an important proportion for certain groups, the distribution is very different if we remove the OTHER category. However, depending on the situation, we can decide whether or not to remove this category.\nFor instance:\n\n- If we want to visualize the most important color for each group: we can remove the category OTHER since it is not a color and therefore, we would need to break up that group. Furthermore, there is no group for which it is the most important category so removing has absolutely no impact.\n\n- If we want to analyze the distribution of the colors for each groups, it is very important to keep the OTHER category since it gives us a valuable insight on the group: since it is an aggregation of many colors, we know that if OTHER accounts for an important proportion of the group color, it means that there is a wide array of color that this group can have. Therefore, it can be useful to keep the OTHER category.\n\n### 4. Maps\n\nDraw a spatial heat map of the percent spayed or neutered dogs by zip code. What patterns do you notice?\n```{r}\nlibrary(dplyr)\nlibrary(choroplethrZip)\n\n\n\nzip <- as.data.frame(df$zip_code)\nzip <- as.data.frame(table(zip))\ncolnames(zip) <- c(\"region\", \"value\")\n\n#TO get choroplethr to zoom on the correct zone\n\n#Load the county codes\nnyc_counties = c(36061, 36081,36085,36005, 36047)\n\n#getting the zips for nyc\ndata(\"zip.regions\")\nnyc_zips<-data.frame(county.fips.numeric=nyc_counties)%>%inner_join(zip.regions)%>%select(region)%>%t\n\nchoroplethrZip::zip_choropleth(as.data.frame(zip),zip_zoom = nyc_zips, title= \"Dog Birth geographical distribution\",legend= \"Number of births\")\n\n```\n\nWe can notice some interesting patterns in the data:\n\n-  South Manhattan and Staten Island have the highest number of births\n\n- The Bronx, the Queens, and Brooklyn have a lower number of births\n\n- Even though Manhattan has a lot of dogs, there is one area that has almost none: Wall Street. The explanation might be very simple: as this area is mainly composed of offices, there is a very small number of families who live there, hence the very low number of births.\n\n- Still on Manhattan, we can see that the number of births depends on whether or not the area is a residential one. This is why Midtown has a low number of births, while areas surrounding Central Park and areas between Midtown and Wall Street also have a high number of births.\n\n### 5. Time Series\n\n(a) Use the `tidyquant` package to collect information on four tech stocks of your choosing. Create a multiple line chart of the closing prices of the four stocks on the same graph, showing each stock in a different color. \n\n\n```{r}\nlibrary(tidyquant)\n\nAAPL  <- tq_get(\"AAPL\", get = \"stock.prices\", from = \"2017-01-01\")\nGOOG  <- tq_get(\"GOOG\", get = \"stock.prices\", from = \"2017-01-01\")\nMSFT  <- tq_get(\"MSFT\", get = \"stock.prices\", from = \"2017-01-01\")\nAMZN  <- tq_get(\"AMZN\", get = \"stock.prices\", from = \"2017-01-01\")\n\n\nggplot() + \n  geom_line(data=AAPL,aes(x=date,y=close,colour = \"Apple\")) + \n  geom_line(data=GOOG,aes(x=date,y=close,colour = \"Google\"))+\n  geom_line(data=MSFT,aes(x=date,y=close,colour = \"Microsoft\"))+\n  geom_line(data=AMZN,aes(x=date,y=close,colour = \"Amazon\"))+\n  ggtitle(\"Evolution of tech stock prices\")\n```\n\n\n\n(b) Transform the data so each stock begins at 100 and replot. Choose a starting date for which you have data on all of the stocks. Do you learn anything new that wasn't visible in (a)?\n\n```{r}\n\nAAPL  <- tq_get(\"AAPL\", get = \"stock.prices\", from = \"2017-01-01\")\nGOOG  <- tq_get(\"GOOG\", get = \"stock.prices\", from = \"2017-01-01\")\nMSFT  <- tq_get(\"MSFT\", get = \"stock.prices\", from = \"2017-01-01\")\nAMZN  <- tq_get(\"AMZN\", get = \"stock.prices\", from = \"2017-01-01\")\n\nAAPL$close <- sapply(AAPL$close,function(x) as.double((x*100)/(AAPL$close[1])))\nGOOG$close <- sapply(GOOG$close,function(x) as.double((x*100)/(GOOG$close[1])))\nMSFT$close <- sapply(MSFT$close,function(x) as.double((x*100)/(MSFT$close[1])))\nAMZN$close <- sapply(AMZN$close,function(x) as.double((x*100)/(AMZN$close[1])))\n\n\nggplot() + \n  geom_line(data=AAPL,aes(x=date,y=close,colour = \"Apple\")) + \n  geom_line(data=GOOG,aes(x=date,y=close,colour = \"Google\"))+\n  geom_line(data=MSFT,aes(x=date,y=close,colour = \"Microsoft\"))+\n  geom_line(data=AMZN,aes(x=date,y=close,colour = \"Amazon\"))+\n  ggtitle(\"Evolution of tech stock prices\")\n\n```\n\nOnce we have rescaled the lines, it turns out the actual evolution of the prices seem very different. Without the rescaling, it seemed that Amazon and Google were trumendously growing while Microsoft and Apple stock prices were almost stable for the entire period.\n\nHowever, this illusion was created by the fact that Amazon and Google stock prices are way higher than those of Microsoft and Apple: because we use the same scale for all the stock prices, a 1% increase in the stock price is more visible if the stock price is higher.\n\nOnce the stock prices are rescaled, we can see the actual evolution of each price: it turns out that Microsoft and Apple prices have actually increased quite a lot. Google stock price which seemed to be soaring dramatically is actually the stock price that increased the less over the period. The only unchanged result is the fact that Amazon stock price is the one that increased the most.\n\n### 6. Presentation\n\nImagine that you have been asked to create a graph from the Dogs of NYC dataset that will be presented to a very important person (or people). The stakes are high.\n\n(a) Who is the audience? (Mayor DeBlasio, a real estate developer, the voters, the City Council, the CEO of Purina...)\n\nThe audience is the City Council. Some members of the council are claiming that Manhattan is overwhelmed with un-neutered dogs. However, the dominant thought is that it is more of a fake news than it is an actual fact.Therefore, the City Council ask for an analyst to look into the claim and assess whether or not the issue is real.\n\n(b) What is the main point you hope someone will take away from the graph?\n\nThe main point to take away is to understand that the claim is false because it is a misrepresentation of the reality. The claim is that Manhattan is an where there is an abnormal number of un-nutered dogs. However, the graph shows that the actual number of un-neutered dogs in Manhattan is very close to those of Brooklyn and the Queens. Moreover, if we study the proportion of un-neutered dogs, it actually turns out that Manhattan has the lowest proportion of un-neutered dogs among all of the boroughs: the number of un-neutered dogs is about the same as for Queens or Brooklyn but the total number of dogs is way higher for Manhattan. As a result, it seems that Manhattan is actually the borough that has the best ratio of neutered dogs! The claim is a genuine fake news!\n\n(c) Present the graph, cleaned up to the standards of \"presentation style.\" Pay attention to choice of graph type, if and how the data will be summarized, if and how the data will be subsetted, title, axis labels, axis breaks, axis tick mark labels, color, gridlines, and any other relevant features.\n\n```{r fig.height = 5, fig.width = 9}\ndf <- read.csv(\"/Users/arnaudstiegler/Desktop/Columbia/data_viz/hw3/NYCdogs.csv\",na = \"n/a\")\n\nspayed <- df[df$spayed_or_neutered=='Neutered',]\nnon_spayed <-  df[df$spayed_or_neutered=='Un-neutered',]\n\ndf$spayed_or_neutered <- sapply(df$spayed_or_neutered, function(x) if(x=='Yes'){return(as.character('Neutered'))} else{return(as.character('Un-Nutered'))})\n\nggplot() + geom_bar(data=df,aes(x=df$spayed_or_neutered,fill=df$spayed_or_neutered))+\n  facet_wrap( ~ df$borough, ncol=5)+\n  xlab(\"Neutering Distribution\")+\n  ylab(\"Number of dogs\")+\n  ggtitle(\"Proportion of neutralization dogs per borough\")+\n  theme(text = element_text(size=10))\n\n```\n\n\n",
    "created" : 1542991876431.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1015225371",
    "id" : "66B6848A",
    "lastKnownWriteTime" : 1541991470,
    "last_content_update" : 1541991470,
    "path" : "~/Desktop/Columbia/data_viz/hw3/aes2329-Hmk3-Fall18.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}